name: Nginx Deploy ECR Repository

on:
  push:
    paths:
      - 'nginx/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: cluster-web
  ECS_SERVICE: nginx-service-stg
  ECS_TASK_DEFINITION_API: nginx/.aws/nginx-task-define.json
  ECR_REPOSITORY: nginx
  CONTAINER_NAME: ngix-container # タスク定義内の"name"と合わせる必要がある。

permissions:
  id-token: write
  contents: read

jobs:
  nginx-ecr-push:
    runs-on: ubuntu-latest
    defaults: # defaultsを設定することでワークフロー内の全てのjobに値が反映される。
      run:
        working-directory:  nginx/
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

    # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

    # https://github.com/aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # 'Login to Amazon ECR'の結果の中の'repository'の値を参照する
          # docker image tag temp_api_image:latest {アカウントID}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:sha
        run: | 
          docker image build -t temp_api_image:latest .
          docker image tag temp_api_image:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker image push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          echo $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} > nginx-image-uri.txt
      
    # https://github.com/actions/upload-artifact
      - name: upload the Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-image-uri
          path: nginx/nginx-image-uri.txt


  # Deploy
  nginx-ecr-deploy:
    runs-on: ubuntu-latest
    needs: [nginx-ecr-push]

    steps: 
      - name: checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      # https://github.com/actions/download-artifact
      - name: Download the Artifact
        uses: actions/download-artifact@v4 # uploadと同じバージョン(v4),nameを指定しないとエラーになるので注意。
        with:
          name: nginx-image-uri
          path: download/artifacts #ランナーの中でダウンロード先のディレクトリが動的に作成されるのでこちらは任意のパスを記載。 

      - name: Define the image URI
        run: | 
          echo "NGINX_IMAGE_URI=$(cat download/artifacts/nginx-image-uri.txt)" >> $GITHUB_ENV

      # https://github.com/aws-actions/amazon-ecs-render-task-definition
      - name: Fill in the new image URI in the amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_API }}
          container-name: ${{ env.CONTAINER_NAME}}
          image: ${{ env.NGINX_IMAGE_URI }}

      #  https://github.com/aws-actions/amazon-ecs-deploy-task-definition
      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-serivce-stability: true # ECSタスクが安定的に起動状態になるまでワークフローを待機する。
